<div class="container-fluid">
<div class="col-md-10 col-md-offset-1">

    <div class="page-header text-center">
    <h1>Weekly Overview</h1>
    </div>

    <div class="row equal-height">
    <div class="col-md-6 flex-col">
      <div class="top4 panel panel-default">
        <table id="top-coders" class="table table-striped">
          <tbody>
            <% @coders.each_with_index do |coder, index| %>
              <tr>
              <td class="rank">
                <% if index != 0 %>
                <%= index + 1 %>.
                <% end %>
              </td>
              <td class="avatar">
                <%= image_tag coder.avatar_url, alt: coder.github_name,
                    size: (index == 0 ? '120' : '45') %>
              </td>
              <td class="name">
                <%= link_to coder.github_name, coder_path(coder), class: "username" %>
                <br>
                <% unless coder.full_name.blank? %>
                <small><%= coder.full_name %></small>
                <% end %>
              </td>
              <td class="score"><%= format_score coder.score %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
    <div class="col-md-6 flex-col">
        <div class="top4 panel panel-default">
            <svg id="top-repos" ViewBox="0 0 600 300"></svg>
        </div>
    </div>
    </div>

      <div class="row equal-height">
        <div class="col-md-4 flex-col">
          <h2 class="text-center">New issues</h2>
          <div class="top4 panel panel-default">
            <table id="new-issue" class="table table-striped">
              <tbody>
                <%= render partial: 'issue', collection: @new_issues %>
              </tbody>
            </table>
          </div>
        </div>
        <div class="col-md-4 flex-col">
          <h2 class="text-center">Largest bounties</h2>
          <div class="top4 panel panel-default">
            <table id="top-issue" class="table table-striped">
              <tbody>
                <%= render partial: 'issue', collection: @top_issues %>
              </tbody>
            </table>
          </div>
        </div>
        <div class="col-md-4 flex-col">
          <h2 class="text-center">Recently closed</h2>
          <div class="top4 panel panel-default">
            <table id="closed-issue" class="table table-striped">
              <tbody>
                <%= render partial: 'issue_closed', collection: @closed_issues %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

  </div>
</div>

<script>
var data = <%=raw @top_repos.to_json %>;

var margin = { top: 20, right: 20, bottom: 25, left: 20 };
var width = 600 - margin.right - margin.left;
var height = 300 - margin.top - margin.bottom;

var value = function(d) { return d.score; };


var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1)
    .domain( data.map(function(d) { return d.name; }) );

var y = d3.scale.linear()
    .range([height, 0])
    .domain([0, d3.max(data, value)]);


var chart = d3.select("#top-repos")
  <%#.attr("width", width + margin.left + margin.right)%>
  <%#.attr("height", height + margin.top + margin.bottom)%>
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var gs = chart.selectAll("g")
    .data(data)
  .enter().append("g")
    .attr("transform", function(d) { return "translate(" + x(d.name) + ",0)";});

var rects = gs.append("rect").attr("class", "bar")
    .attr("width", x.rangeBand())
    .attr("height", 0)
    .attr("y", height)
    .transition().duration(1000)
    .attr("y", function(d) { return y(value(d)); })
    .attr("height", function(d) { return height - y(value(d)); })
    .each("end", function() {
        gs.on("mouseover", function(d) {
              var t = d3.select(this).transition().duration(300)
              t.select("text").style("opacity", 1);
              t.select("rect").style("fill", d3.rgb("#e91e63"))
          })
            .on("mouseout", function(d) {
              var t = d3.select(this).transition().duration(300)
              t.select("text").style("opacity", 0);
              t.select("rect").style("fill", d3.rgb("#337AB7"));
          });
    });

gs.append("text").attr("class", "label")
    .attr("x", x.rangeBand()/2)
    .attr("y", function(d) { return y(value(d)); })
    .attr("dy", "-.25em")
    .text(function(d) { return value(d); });

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

chart.append("g")
    .attr("class", "axis xaxis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis)
    .selectAll("text")
        .attr("dy", "1em");



</script>
